<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="eqlee.ctm.apply.orders.dao.OrderDetailedMapper">


    <insert id="batchInsertorderDetailed" parameterType="eqlee.ctm.apply.orders.entity.bo.OrderDetailedBo">
        insert into OrderDetailed(Id,OrderId,ContactName,ContactTel,Place,AdultNumber,BabyNumber,
        OldNumber,ChildNumber,AllNumber,Price,CreateUserId,PayType,AccountName,CompanyName,MsPrice,MonthPrice,
        CompanyUserName,CompanyUserTel,LineName,ApplyRemark,Types,ApplyId)
        <foreach collection="list" item="item" index="index" separator="union all">
            select #{item.Id},#{item.OrderId},#{item.ContactName},#{item.ContactTel},#{item.Place},
            #{item.AdultNumber},#{item.BabyNumber},#{item.OldNumber},#{item.ChildNumber},
            #{item.AllNumber},#{item.Price},#{item.CreateUserId},#{item.PayType},#{item.AccountName},#{item.CompanyName}
            ,#{item.MsPrice},#{item.MonthPrice},#{item.CompanyUserName},#{item.CompanyUserTel},#{item.LineName},#{item.ApplyRemark}
            ,#{item.Types},#{item.ApplyId}
        </foreach>
    </insert>


    <select id="pageOrderDetailed" resultType="eqlee.ctm.apply.orders.entity.query.OrderDetailedQuery">
        select b.Id as 'OrderId',b.ContactName,b.ContactTel,b.Place,b.AllNumber,b.PayType
        ,b.AdultNumber,b.BabyNumber,b.OldNumber,b.ChildNumber,isnull(b.MsPrice,0)MsPrice
        ,a.OutDate as 'outDate',b.LineName as 'lineName',b.CompanyName as 'companyName',b.Price as 'allPrice'
        ,b.ApplyRemark as 'applyRemark',a.GuideName as 'guideName',b.Types as 'type',d.PayType as 'ApplyPayType',d.ThirdpartyNumber
        from Orders a join OrderDetailed b on a.Id = b.OrderId join Apply c on c.Id = b.ApplyId left join pay d on c.ApplyNo = d.ApplyNo
        <where>
            1 = 1
            and a.Id = #{id}
            <if test="payType != null">
                and b.PayType = #{payType}
            </if>
        </where>
    </select>

    <select id="pageOrder" resultType="eqlee.ctm.apply.orders.entity.bo.OrderBo">
        select * from( select max(a.Id)id,max(a.OrderNo)orderNo,max(convert(varchar(20),a.OutDate,23))outDate,max(a.LineName)lineName,max(a.Region)region,sum(isnull(b.MsPrice,0))msPrice,
       sum(b.AdultNumber)adultNumber,sum(b.BabyNumber)babyNumber,sum(b.OldNumber)oldNumber,sum(b.ChildNumber)childNumber,
       sum(b.AllNumber)allNumber,max(a.GuideName)guideName,max(a.CarNumber)carNumber,max(d.Status)status,max(d.Remark)remark
       from Orders a join OrderDetailed b on a.Id = b.OrderId left join Income d on a.Id = d.OrderId
       <where>
           1 = 1
           <if test="id != null">
               and a.CreateUserId = #{id}
           </if>
           <if test="start != null">
              and a.OutDate between #{start} and #{end}
           </if>
           <if test="lineName != null">
              and a.LineName = #{lineName}
           </if>
           <if test="region != null">
               <bind name="region_" value="'%' + region + '%'"/>
               and a.Region like #{region_}
           </if>
       </where>
       group by a.OrderNo) cc order by outDate desc,isnull(status,999) desc
    </select>


    <select id="pageOrder2" resultType="eqlee.ctm.apply.orders.entity.bo.OrderBo">
        select * from( select max(a.Id)id,max(a.OrderNo)orderNo,max(convert(varchar(20),a.OutDate,23))outDate,max(a.LineName)lineName,max(a.Region)region,sum(isnull(b.MsPrice,0))msPrice,
        sum(b.AdultNumber)adultNumber,sum(b.BabyNumber)babyNumber,sum(b.OldNumber)oldNumber,sum(b.ChildNumber)childNumber,
        sum(b.AllNumber)allNumber,max(a.GuideName)guideName,max(a.CarNumber)carNumber,max(d.Status)status,max(d.Remark)remark
        from Orders a join OrderDetailed b on a.Id = b.OrderId left join Income d on a.Id = d.OrderId
        <where>
            1 = 1
            <if test="id != null">
                and a.CreateUserId = #{id}
            </if>
            <if test="start != null">
                and a.OutDate between #{start} and #{end}
            </if>
            <if test="lineName != null">
                and a.LineName = #{lineName}
            </if>
            <if test="guideName != null">
                and a.GuideName = #{guideName}
            </if>
            <if test="inStatus != null">
                <if test="inStatus == 0">
                    and a.IsFinash = 0
                </if>
                <if test="inStatus == 1">
                    and a.IsFinash = 1
                </if>
            </if>
        </where>
        group by a.OrderNo) ee order by outDate desc,isnull(status,-1)
    </select>


    <select id="queryInOutInfo" resultType="eqlee.ctm.apply.orders.entity.query.OrderFinanceQuery" parameterType="Long">
        select a.CaiName as 'financeName',b.OutName as 'outName',b.OutPrice as 'outPrice',a.OtherInPrice as 'otherInPrice'
        from Income a left join OutCome2 b on a.Id = b.IncomeId
        where a.OrderId = #{orderId}
    </select>

</mapper>