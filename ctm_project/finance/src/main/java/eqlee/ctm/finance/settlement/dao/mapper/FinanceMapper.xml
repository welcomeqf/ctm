<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="eqlee.ctm.finance.settlement.dao.InFinanceMapper">

    <select id="queryOrderNumber" parameterType="long" resultType="eqlee.ctm.finance.settlement.entity.vo.OrderDetailedVo">
        select a.AdultNumber, a.BabyNumber, a.OldNumber, a.ChildNumber from OrderDetailed a join Orders b on a.OrderId = b.Id
        where  a.PayType = 2 and b.CreateUserId = #{Id}
    </select>

    <select id="listPageExa" resultType="eqlee.ctm.finance.settlement.entity.query.ExamineResultQuery">
        select max(a.OrderId)Id, max(a.GuideName)GuideName,max(convert(varchar(20),a.OutDate,23)) as 'OutDate',max(a.LineName)LineName,
        max(a.GuideTel) as 'Tel',max(a.AllInPrice)AllInPrice,
        (isnull(max(a.AllInPrice),0) - isnull(sum(b.OutPrice),0)) as 'FinallyPrice',isnull(sum(b.OutPrice),0)AllOutPrice,max(a.Status)Status
        from Income a left join Outcome2 b
        on a.Id = b.IncomeId
        <where>
            1 = 1
            <if test="guideName != null">
                and a.GuideName = #{guideName}
            </if>
            <if test="type != null">
               <if test="type == 0">
                   and a.Status = 0
               </if>
               <if test="type != 0">
                   and a.Status != 0
               </if>
            </if>
            <if test="outTime != null">
                and a.OutDate = #{outTime}
            </if>
        </where>
        group by a.OutDate
    </select>

    <select id="listExamineDetailed" parameterType="long" resultType="eqlee.ctm.finance.settlement.entity.vo.ExamineResultVo">
        select a.Id as 'id',a.CreateUserId as 'GuestId',a.GuideName,convert(varchar(20),a.OutDate,23) as 'OutDate',a.LineName,a.SettlementPrice,
        isnull(a.AllInPrice,0)AllInPrice,c.MonthPrice,
        c.AllDoNumber,c.TreeAdultNumber,c.TreeBabyNumber,c.TreeOldNumber,c.TreeChildNumber,c.TrueAllNumber
        from Income a left join Outcome2 b on a.Id = b.IncomeId join Number c on a.NumberId = c.Id
        where a.Id = #{Id}
    </select>

    <select id="pageGuest2Me" resultType="eqlee.ctm.finance.settlement.entity.query.GuestResultQuery">
        select max(a.OrderId)id,convert(varchar(20),max(a.OutDate),23) as 'OutDate',max(a.LineName)LineName,max(c.TrueAllNumber)TrueAllNumber,
        (isnull(max(a.AllInPrice),0))SubstitutionPrice,max(c.TreeBabyNumber)TreeBabyNumber,max(c.TreeOldNumber)TreeOldNumber
        ,max(a.Status)Status,max(c.TreeAdultNumber)TreeAdultNumber,max(c.TreeChildNumber)TreeChildNumber
        ,isnull(sum(b.OutPrice),0)AllOutPrice,(isnull(sum(b.OutPrice),0)- isnull(max(a.AllInPrice),0))ResultPrice
        from Income a left join OutCome2 b on a.Id = b.IncomeId join Number c on a.NumberId = c.Id
        <where>
            1 = 1
            <if test="Status != 3">
                and a.Status = #{Status}
            </if>
            <if test="outTime != null">
                and a.OutDate = #{outTime}
            </if>
            <if test="lineName != null">
                and a.LineName = #{lineName}
            </if>
            <if test="id != null">
                and a.CreateUserId = #{id}
            </if>
        </where>
        group by a.OutDate
    </select>

    <update id="updateIsFinash">
        update Orders set IsFinash = 1, UpdateDate = #{dateTime} where OutDate = #{outDate}
        and CreateUserId = #{id}
    </update>

    <update id="examineGuestResult">
        update Income set Status = 1, UpdateDate = #{time}, CaiName = #{caiName}, Remark = #{remark}
        where OrderId = #{id}
    </update>

    <update id="examineResult">
        update Income set Status = 2, UpdateDate = #{time}, CaiName = #{caiName}, Remark = #{remark}
        where OrderId = #{id}
    </update>

    <select id="pageExamine" resultType="eqlee.ctm.finance.settlement.entity.query.ExamineInfoQuery">
        select a.CreateUserId as 'guideId',a.GuideName as 'guideName',convert(varchar(100),a.OutDate,20) as 'outDate',a.LineName as 'lineName',
       a.UpdateDate as 'updateDate',a.Status as 'status'
        from Income a left join OutCome2 b on a.Id = b.IncomeId
        where a.CreateUserId = #{guideId} and OutDate = #{outDate}
        order by a.UpdateDate desc
    </select>


    <update id="updateCarStatus" parameterType="String">
        update Car set Statu = 0 where CarNo= #{CarNo}
    </update>

    <!-- 月结统计 -->
    <select id="pageFinanceCompany" resultType="eqlee.ctm.finance.settlement.entity.bo.FinanceCompanyBo">
        select max(c.CompanyNo)companyNo,min(convert(varchar(20),b.OutDate,23))outDate,max(c.CompanyName)companyName,sum(a.AllNumber)allNumber,isnull(sum(a.MonthPrice),0)monthPrice
        ,isnull(sum(a.MsPrice),0)msPrice,isnull((sum(a.MonthPrice) - sum(a.MsPrice)),0)gaiPrice,
        max(a.CompanyUserName)companyUserName,max(a.CompanyUserTel)companyUserTel,max(a.AccountName)accountName,
        sum(a.AdultNumber)adultNumber,sum(a.BabyNumber)babyNumber,sum(a.OldNumber)oldNumber,sum(a.ChildNumber)childNumber
        from OrderDetailed a join Orders b on a.OrderId = b.Id join Company c on b.CompanyId = c.Id
        <where>
            1 = 1
            <if test="start != null">
               and b.OutDate between #{start} and #{end}
            </if>
            <if test="companyName != null">
                <bind name="_companyName" value="'%' + companyName + '%'"/>
                and (c.CompanyName like #{_companyName} or a.AccountName like #{_companyName}
                or a.CompanyUserName like #{_companyName} or a.CompanyUserTel like #{_companyName})
            </if>
        </where>
        group by a.AccountName
    </select>

    <!-- 月结统计详情 -->
    <select id="queryCompanyInfoCount" resultType="eqlee.ctm.finance.settlement.entity.bo.FinanceCompanyInfoBo">
        select max(b.Id)id,max(c.CompanyNo)companyNo,min(convert(varchar(20),b.OutDate,23))outDate,max(c.CompanyName)companyName,
        sum(a.AllNumber)allNumber,isnull(sum(a.MonthPrice),0)monthPrice
        ,isnull(sum(a.MsPrice),0)msPrice,max(b.LineName)lineName,sum(a.Price)price,
        sum(a.AdultNumber)adultNumber,sum(a.BabyNumber)babyNumber,sum(a.OldNumber)oldNumber,sum(a.ChildNumber)childNumber,
        max(a.CompanyUserName)companyUserName
        from OrderDetailed a join Orders b on a.OrderId = b.Id join Company c on b.CompanyId = c.Id
        <where>
            1 = 1
            and b.OutDate between #{start} and #{end}
            and a.AccountName = #{accountName}
            <if test="lineName != null">
                and b.LineName = #{lineName}
            </if>
        </where>
        group by b.Id
    </select>


    <insert id="insertMsg" parameterType="eqlee.ctm.finance.settlement.entity.bo.MsgCaiBo">
        insert into Message (CreateId,MsgType,Msg,ToId)
        values (#{createId},#{msgType},#{msg},#{toId})
    </insert>

</mapper>